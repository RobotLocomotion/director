ddDrakeModel::ddDrakeModel();
ddDrakeModel::~ddDrakeModel();
bool ddDrakeModel::loadFromFile(const QString&);
bool ddDrakeModel::loadFromXML(const QString&);
void ddDrakeModel::addToRenderer(vtkRenderer*);
void ddDrakeModel::removeFromRenderer(vtkRenderer*);
int ddDrakeModel::numberOfJoints();
void ddDrakeModel::setJointPositions(const QVector<double>&);
void ddDrakeModel::setJointPositions(const QVector<double>&, const QStringList&);
QVector<double> ddDrakeModel::getJointPositions(const QStringList&) const;
QVector<double> ddDrakeModel::getJointPositions() const;
QVector<double> ddDrakeModel::getCenterOfMass() const;
QVector<double> ddDrakeModel::getJointLimits(const QString&) const;
QVector<double> ddDrakeModel::getBodyContactPoints(const QString&) const;
bool ddDrakeModel::getLinkToWorld(const QString&, vtkTransform*);
QString ddDrakeModel::getLinkNameForMesh(vtkPolyData*);
QStringList ddDrakeModel::getLinkNames();
QStringList ddDrakeModel::getJointNames();
int ddDrakeModel::findLinkID(const QString&) const;
void ddDrakeModel::setAlpha(double);
void ddDrakeModel::setVisible(bool);
void ddDrakeModel::setTexturesEnabled(bool);
QColor ddDrakeModel::color() const;
void ddDrakeModel::setColor(const QColor&);
void ddDrakeModel::setLinkColor(const QString&, const QColor&);
QColor ddDrakeModel::getLinkColor(const QString&) const;
void ddDrakeModel::getModelMesh(vtkPolyData*);
double ddDrakeModel::alpha() const;
bool ddDrakeModel::visible() const;
bool ddDrakeModel::texturesEnabled() const;
QString ddDrakeModel::filename() const;
static void ddDrakeModel::addPackageSearchPath(const QString&);
static QString ddDrakeModel::findPackageDirectory(const QString&);
ddDrakeWrapper::ddDrakeWrapper();
ddDrakeWrapper::~ddDrakeWrapper();
QVector<double> ddDrakeWrapper::resolveCenterOfPressure(const ddDrakeModel&, const QVector<int>&, const QVector<double>&, const QVector<double>&, const QVector<double>&) const;
double ddDrakeWrapper::drakeSignedDistanceInsideConvexHull(int, const QVector<double>&, const QVector<double>&) const;
